#!/usr/bin/env bash
# vim: filetype=sh softtabstop=2 tabstop=2 shiftwidth=2 fileencoding=utf-8 expandtab
set -xeuo pipefail
export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
if [ ! "$(command -v sudo)" ]; then
  echo 'Please install "sudo" package' 1>&2
  exit 1
fi
if [[ $EUID -eq 0 ]]; then
  echo "You must run this script as non-root user with sudo permission." 1>&2
  exit 1
fi
if [ -n "$(command -v pacman)" ]; then
  echo "*** Detected Arch based Linux" 1>&2
  sudo pacman -Sy --needed --noconfirm docker docker-compose
else
  if [ -n "$(command -v apt-get)" ]; then
    echo "*** Detected Debian based Linux" 1>&2
    export DEBIAN_FRONTEND=noninteractive
    sudo apt-get update -qq >/dev/null 2>&1
    sudo apt-get install -yqq apt-utils curl lsb-release wget ca-certificates gnupg2 jq >/dev/null 2>&1
    osname=$(lsb_release -is | tr '[:upper:]' '[:lower:]')
    osrelease=$(lsb_release -cs)
    curl -fsSL "https://download.docker.com/linux/${osname}/gpg" | sudo apt-key add - >/dev/null 2>&1
    echo "deb [arch=amd64] https://download.docker.com/linux/${osname} ${osrelease} stable" |
      sudo tee "/etc/apt/sources.list.d/docker.list" >/dev/null
    sudo apt-get -qq update
    sudo apt-get remove -yqq docker docker-engine docker.io containerd runc >/dev/null 2>&1 || true
    sudo apt-get install -yqq curl wget docker-ce jq docker-ce-cli containerd.io >/dev/null 2>&1
  fi
  echo >&2 "*** Installing docker-compose"
  curl -fsSL \
    "https://api.github.com/repos/docker/compose/releases/latest" |
    jq -r "
  .assets[]
  |select(.browser_download_url
    | contains(\"linux\")
      and contains(\"$(uname -m)\")
      and contains(\"x86_64\")
      and (contains(\"sha256\")|not)
      ).browser_download_url" |
    sudo xargs -I {} \
      wget \
      --quiet \
      --no-cache \
      -O "/usr/local/bin/docker-compose" \
      {}
  sudo chmod +x "/usr/local/bin/docker-compose"
fi
sudo usermod -aG docker "$(whoami)"
newgrp docker <<_EOF_
docker run --rm hello-world >/dev/null 2>&1
_EOF_
